---
title: Analytics Report Shell
author: 
  - name: Mazie Burt
    email: mazie.burt@snhu.edu
    affiliations: 
      - name: Southern New Hampshire University
format: html
date: 1/08/2025
date-modified: today
date-format: long
theme: flatly 
toc: true
code-fold: true
message: false 
---


## Working with Data

```{r}
library(tidyverse)
library(tidymodels)
library(skimr)
library(ggmosaic)

hits <- read_csv("https://raw.githubusercontent.com/agmath/agmath.github.io/refs/heads/master/data/classification/battedballs.csv")

parks <- read_csv("https://raw.githubusercontent.com/agmath/agmath.github.io/refs/heads/master/data/classification/park_dimensions.csv")
```

## Exploring Our Data

```{r}
#head(hits)

hits %>% 
  head()
```

```{r}
parks %>% 
  head()
```
### Joining the Data 
```{r}
hits <- hits %>%
  left_join(parks, by = c("park" = "park"))
```

We joined the `hits` and `parks` data together, to obtain a full data set with `r nrow(hits)` rows and `r ncol(hits)` columns. 


Initial Explorations 
```{r}
hits %>% 
  head(10)
```


Skimming the data set
```{r}
hits %>%
  skim()
```
Split into training and test data 
```{r}
set.seed(123)
data_splits <- initial_split(hits, 0.85, strata = is_home_run)

train <- training(data_splits)
test <- testing(data_splits)
```

## Exploratory Data Analysis 

How and why do home runs happen? 

Filtering rows
```{r}
train %>%
  filter(is_home_run == 1)
```

Selecting just a few columns 
```{r}
train %>% 
  select(launch_speed, launch_angle, is_home_run)
```

Building new variables from old ones (*Feature Engineering*)

```{r}
train %>%
  mutate(fast_pitch = ifelse(pitch_mph > 100, "yes", "no"))
```




### Summary Statistics 

Home runs... 

```{r}
train %>% 
  count(is_home_run) %>%
  mutate(prop = n/sum(n))
```
```{r}
train %>%
  summarize(pct_hr = mean(is_home_run))
```

Summarizing Launch Angle...

```{r}
train %>%
  ##filter(!is.na(launch_angle)) %>%
  summarize(
    min_angle = min(launch_angle, na.rm = TRUE), 
    mean_angle = mean(launch_angle, na.rm = TRUE),
    median_angle = median(launch_angle, na.rm = TRUE),
    max_angle = max(launch_angle, na.rm = TRUE),
    sd_angle = sd(launch_angle, na.rm = TRUE)
  )
```
#### Grouped Summaries 

```{r}
train %>%
  group_by(is_home_run) %>%
  ##filter(!is.na(launch_angle)) %>%
  summarize(
    min_angle = min(launch_angle, na.rm = TRUE), 
    mean_angle = mean(launch_angle, na.rm = TRUE),
    median_angle = median(launch_angle, na.rm = TRUE),
    max_angle = max(launch_angle, na.rm = TRUE),
    sd_angle = sd(launch_angle, na.rm = TRUE)
  )
```

### Data Visualization 

```{r}
train %>%
  ggplot() +
  geom_bar(aes(x = is_home_run, fill = is_home_run), color = "black") +
  labs(title = "Home Run Distribution", x = "Home Run (Yes/No)", y = "Count") 
```

```{r}
train %>%
  ggplot() + 
  geom_density(aes(x = launch_angle), fill = "red") + 
  labs(x = "Launch Angle", y = "Density", title = "Density Plot of Launch Angle")
```


```{r}
train %>%
  ggplot() +
  geom_bar(aes(x = pitch_name, fill = "purple")) + 
  labs(x = "Pitch Type", y = "", title = "Distribution of Pitch Types")
```
```{r}
train |>
  ggplot() +
  geom_density(aes(x = launch_speed, fill = "blue")) + 
  labs(x = "Launch Speed", y = "Density", title = "Density Plot of Launch Speed")
```
```{r}
train %>% 
  ggplot() +
  geom_boxplot(aes(y = pitch_name, x = pitch_mph)) + 
  labs(x = "Pitch Speed", y = "Pitch Type", title = "Boxplot of Pitch Speed vs. Pitch Type")
```

```{r}
train %>% 
  ggplot(aes(x = pitch_mph)) + 
  geom_histogram(aes(y = after_stat(density)), binwidth = 2, fill = "yellow", alpha = 0.7) +
  geom_density(aes(color = pitch_name, fill = pitch_name), alpha = 0.4, size = 1) +
  facet_wrap(~ pitch_name)
```
```{r}
train %>% 
  ggplot() + 
  geom_hex(aes(x = launch_angle, y = launch_speed)) 
```


